{"ast":null,"code":"import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ProductService {\n  constructor() {\n    this.products = [{\n      id: 1,\n      name: 'Product 1',\n      image: 'assets/images/product1.jpg',\n      price: 100,\n      quantity: 10,\n      description: 'Description 1',\n      discount: 0,\n      onsale: false\n    }, {\n      id: 2,\n      name: 'Product 2',\n      image: 'assets/images/product2.jpg',\n      price: 150,\n      quantity: 8,\n      description: 'Description 2',\n      discount: 10,\n      onsale: true\n    }\n    // Add more sample products here if needed\n    ];\n  }\n\n  getAllProducts() {\n    // Simulate fetching products from a server\n    return of(this.products);\n  }\n  getProductById(id) {\n    // Simulate fetching a product by ID from a server\n    const product = this.products.find(p => p.id === id);\n    return of(product);\n  }\n  updateProduct(id, updatedProduct) {\n    // Simulate updating a product on the server\n    const index = this.products.findIndex(p => p.id === id);\n    if (index !== -1) {\n      this.products[index] = updatedProduct;\n      return of({\n        success: true\n      });\n    } else {\n      return of({\n        success: false,\n        message: 'Product not found'\n      });\n    }\n  }\n  static #_ = this.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["of","ProductService","constructor","products","id","name","image","price","quantity","description","discount","onsale","getAllProducts","getProductById","product","find","p","updateProduct","updatedProduct","index","findIndex","success","message","_","_2","factory","ɵfac","providedIn"],"sources":["H:\\ITI\\Angular\\Lab\\AngularRouting\\src\\app\\services\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { IProduct } from '../models/product.model'; // Import your product model\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  private products: IProduct[] = [\n    { id: 1, name: 'Product 1', image: 'assets/images/product1.jpg', price: 100, quantity: 10, description: 'Description 1', discount: 0, onsale: false },\n    { id: 2, name: 'Product 2', image: 'assets/images/product2.jpg', price: 150, quantity: 8, description: 'Description 2', discount: 10, onsale: true },\n    // Add more sample products here if needed\n  ];\n\n  constructor() {}\n\n  getAllProducts(): Observable<IProduct[]> {\n    // Simulate fetching products from a server\n    return of(this.products);\n  }\n\n  getProductById(id: number): Observable<IProduct | undefined> {\n    // Simulate fetching a product by ID from a server\n    const product = this.products.find(p => p.id === id);\n    return of(product);\n  }\n\n  updateProduct(id: number, updatedProduct: IProduct): Observable<any> {\n    // Simulate updating a product on the server\n    const index = this.products.findIndex(p => p.id === id);\n    if (index !== -1) {\n      this.products[index] = updatedProduct;\n      return of({ success: true });\n    } else {\n      return of({ success: false, message: 'Product not found' });\n    }\n  }\n\n  // Add more methods as needed (e.g., addProduct, deleteProduct)\n}\n"],"mappings":"AACA,SAAqBA,EAAE,QAAQ,MAAM;;AAMrC,OAAM,MAAOC,cAAc;EAOzBC,YAAA;IANQ,KAAAC,QAAQ,GAAe,CAC7B;MAAEC,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,WAAW;MAAEC,KAAK,EAAE,4BAA4B;MAAEC,KAAK,EAAE,GAAG;MAAEC,QAAQ,EAAE,EAAE;MAAEC,WAAW,EAAE,eAAe;MAAEC,QAAQ,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAK,CAAE,EACrJ;MAAEP,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,WAAW;MAAEC,KAAK,EAAE,4BAA4B;MAAEC,KAAK,EAAE,GAAG;MAAEC,QAAQ,EAAE,CAAC;MAAEC,WAAW,EAAE,eAAe;MAAEC,QAAQ,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAI;IAClJ;IAAA,CACD;EAEc;;EAEfC,cAAcA,CAAA;IACZ;IACA,OAAOZ,EAAE,CAAC,IAAI,CAACG,QAAQ,CAAC;EAC1B;EAEAU,cAAcA,CAACT,EAAU;IACvB;IACA,MAAMU,OAAO,GAAG,IAAI,CAACX,QAAQ,CAACY,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACZ,EAAE,KAAKA,EAAE,CAAC;IACpD,OAAOJ,EAAE,CAACc,OAAO,CAAC;EACpB;EAEAG,aAAaA,CAACb,EAAU,EAAEc,cAAwB;IAChD;IACA,MAAMC,KAAK,GAAG,IAAI,CAAChB,QAAQ,CAACiB,SAAS,CAACJ,CAAC,IAAIA,CAAC,CAACZ,EAAE,KAAKA,EAAE,CAAC;IACvD,IAAIe,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAAChB,QAAQ,CAACgB,KAAK,CAAC,GAAGD,cAAc;MACrC,OAAOlB,EAAE,CAAC;QAAEqB,OAAO,EAAE;MAAI,CAAE,CAAC;KAC7B,MAAM;MACL,OAAOrB,EAAE,CAAC;QAAEqB,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAE;MAAmB,CAAE,CAAC;;EAE/D;EAAC,QAAAC,CAAA,G;qBA7BUtB,cAAc;EAAA;EAAA,QAAAuB,EAAA,G;WAAdvB,cAAc;IAAAwB,OAAA,EAAdxB,cAAc,CAAAyB,IAAA;IAAAC,UAAA,EAFb;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}