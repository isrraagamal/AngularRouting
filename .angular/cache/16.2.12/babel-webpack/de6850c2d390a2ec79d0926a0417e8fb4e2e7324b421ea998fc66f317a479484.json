{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nexport let ProductFormComponent = class ProductFormComponent {\n  get nameControl() {\n    return this.productForm.get('name');\n  }\n  get descriptionControl() {\n    return this.productForm.get('description');\n  }\n  get priceControl() {\n    return this.productForm.get('price');\n  }\n  get quantityControl() {\n    return this.productForm.get('quantity');\n  }\n  get discountControl() {\n    return this.productForm.get('discount');\n  }\n  constructor(prodService, myRouter, actRoute) {\n    this.prodService = prodService;\n    this.myRouter = myRouter;\n    this.actRoute = actRoute;\n    this.productForm = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.minLength(5)]),\n      description: new FormControl('', [Validators.required, Validators.minLength(4)]),\n      price: new FormControl(0, [Validators.required, Validators.min(100)]),\n      quantity: new FormControl(0, [Validators.required, Validators.min(5)]),\n      discount: new FormControl(0, [Validators.required, Validators.min(5), Validators.max(25)]),\n      onsale: new FormControl(false, [Validators.required])\n    });\n    this.id = 0;\n  }\n  OnInit() {\n    this.id = this.actRoute.snapshot.params['id'];\n    if (this.id != 0) {\n      var product = this.prodService.getProductById(this.id);\n      this.productForm.controls['name'].setValue(product?.name);\n      this.productForm.controls['price'].setValue(product?.price);\n      this.productForm.controls['quantity'].setValue(product?.quantity);\n      this.productForm.controls['description'].setValue(product?.description);\n      this.productForm.controls['onsale'].setValue(product?.onsale);\n      this.productForm.controls['discount'].setValue(product?.discount);\n    }\n  }\n  onSubmit(e) {\n    e.preventDefault;\n    if (this.productForm.valid) {\n      if (this.id) {} else {\n        this.prodService.addProduct(this.productForm.value);\n      }\n      this.myRouter.navigate(['./products']);\n    }\n  }\n};\nProductFormComponent = __decorate([Component({\n  selector: 'app-product-form',\n  templateUrl: './product-form.component.html',\n  styleUrls: ['./product-form.component.css']\n})], ProductFormComponent);","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","ProductFormComponent","nameControl","productForm","get","descriptionControl","priceControl","quantityControl","discountControl","constructor","prodService","myRouter","actRoute","name","required","minLength","description","price","min","quantity","discount","max","onsale","id","OnInit","snapshot","params","product","getProductById","controls","setValue","onSubmit","e","preventDefault","valid","addProduct","value","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["H:\\ITI\\Angular\\Lab\\AngularRouting\\src\\app\\product-form\\product-form.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ProductService } from '../services/product.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-product-form',\n  templateUrl: './product-form.component.html',\n  styleUrls: ['./product-form.component.css']\n})\nexport class ProductFormComponent {\n  productForm: FormGroup = new FormGroup({\n    name: new FormControl('', [\n      Validators.required,\n      Validators.minLength(5)\n    ]),\n    description: new FormControl('', [\n      Validators.required,\n      Validators.minLength(4)\n    ]),\n    price: new FormControl(0, [\n      Validators.required,\n      Validators.min(100)\n    ]),\n    quantity: new FormControl(0, [\n      Validators.required,\n      Validators.min(5)\n    ]),\n    discount: new FormControl(0, [\n      Validators.required,\n      Validators.min(5),\n      Validators.max(25)\n    ]),\n    onsale: new FormControl(false, [\n      Validators.required,\n    ]),\n  })\n  get nameControl() {\n    return this.productForm.get('name');\n  }\n\n  get descriptionControl() {\n    return this.productForm.get('description');\n  }\n\n  get priceControl() {\n    return this.productForm.get('price');\n  }\n\n  get quantityControl() {\n    return this.productForm.get('quantity');\n  }\n\n  get discountControl() {\n    return this.productForm.get('discount');\n  }\n\n\n  constructor(private prodService: ProductService, private myRouter: Router, private actRoute: ActivatedRoute) { }\n  id: number = 0;\n  OnInit(): void {\n    this.id = this.actRoute.snapshot.params['id'];\n    if (this.id != 0) {\n      var product = this.prodService.getProductById(this.id);\n      this.productForm.controls['name'].setValue(product?.name);\n      this.productForm.controls['price'].setValue(product?.price);\n      this.productForm.controls['quantity'].setValue(product?.quantity);\n      this.productForm.controls['description'].setValue(product?.description);\n      this.productForm.controls['onsale'].setValue(product?.onsale);\n      this.productForm.controls['discount'].setValue(product?.discount);\n    }\n  }\n  onSubmit(e: Event) {\n    e.preventDefault;\n    if (this.productForm.valid) {\n      if(this.id){\n\n      }\n      else{\n      this.prodService.addProduct(this.productForm.value);\n      }\n      this.myRouter.navigate(['./products']);\n    }\n\n  }\n\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}